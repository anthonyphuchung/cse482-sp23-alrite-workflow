// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class FragmentRrCounterBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout Circle;

  @NonNull
  public final TextView TapOnInhale;

  @NonNull
  public final TextView Warning;

  @NonNull
  public final Button back;

  @NonNull
  public final RelativeLayout buttons;

  @NonNull
  public final CardView card;

  @NonNull
  public final TextView elapsedTime;

  @NonNull
  public final Button manual;

  @NonNull
  public final Button next;

  @NonNull
  public final Button reset;

  private FragmentRrCounterBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout Circle,
      @NonNull TextView TapOnInhale, @NonNull TextView Warning, @NonNull Button back,
      @NonNull RelativeLayout buttons, @NonNull CardView card, @NonNull TextView elapsedTime,
      @NonNull Button manual, @NonNull Button next, @NonNull Button reset) {
    this.rootView = rootView;
    this.Circle = Circle;
    this.TapOnInhale = TapOnInhale;
    this.Warning = Warning;
    this.back = back;
    this.buttons = buttons;
    this.card = card;
    this.elapsedTime = elapsedTime;
    this.manual = manual;
    this.next = next;
    this.reset = reset;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentRrCounterBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentRrCounterBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_rr_counter, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentRrCounterBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Circle;
      LinearLayout Circle = rootView.findViewById(id);
      if (Circle == null) {
        break missingId;
      }

      id = R.id.TapOnInhale;
      TextView TapOnInhale = rootView.findViewById(id);
      if (TapOnInhale == null) {
        break missingId;
      }

      id = R.id.Warning;
      TextView Warning = rootView.findViewById(id);
      if (Warning == null) {
        break missingId;
      }

      id = R.id.back;
      Button back = rootView.findViewById(id);
      if (back == null) {
        break missingId;
      }

      id = R.id.buttons;
      RelativeLayout buttons = rootView.findViewById(id);
      if (buttons == null) {
        break missingId;
      }

      id = R.id.card;
      CardView card = rootView.findViewById(id);
      if (card == null) {
        break missingId;
      }

      id = R.id.elapsedTime;
      TextView elapsedTime = rootView.findViewById(id);
      if (elapsedTime == null) {
        break missingId;
      }

      id = R.id.manual;
      Button manual = rootView.findViewById(id);
      if (manual == null) {
        break missingId;
      }

      id = R.id.next;
      Button next = rootView.findViewById(id);
      if (next == null) {
        break missingId;
      }

      id = R.id.reset;
      Button reset = rootView.findViewById(id);
      if (reset == null) {
        break missingId;
      }

      return new FragmentRrCounterBinding((LinearLayout) rootView, Circle, TapOnInhale, Warning,
          back, buttons, card, elapsedTime, manual, next, reset);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
