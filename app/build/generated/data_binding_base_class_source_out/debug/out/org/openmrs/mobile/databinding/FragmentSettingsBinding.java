// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView appIcon;

  @NonNull
  public final TextView appNameTextView;

  @NonNull
  public final TextView conceptsCountTextView;

  @NonNull
  public final Button conceptsDownloadButton;

  @NonNull
  public final TextView conceptsTextView;

  @NonNull
  public final LinearLayout contactUsLayout;

  @NonNull
  public final SwitchCompat darkModeSwitch;

  @NonNull
  public final Button languageApplyButton;

  @NonNull
  public final TextView languageHeader;

  @NonNull
  public final Spinner languageSpinner;

  @NonNull
  public final ConstraintLayout linearLayout;

  @NonNull
  public final TextView logsDesc1TextView;

  @NonNull
  public final TextView logsDesc2TextView;

  @NonNull
  public final LinearLayout logsLayout;

  @NonNull
  public final LinearLayout privacyPolicyLayout;

  @NonNull
  public final LinearLayout rateUsLayout;

  @NonNull
  public final TextView versionTextView;

  @NonNull
  public final View view;

  @NonNull
  public final View viewDivider1;

  private FragmentSettingsBinding(@NonNull ScrollView rootView, @NonNull ImageView appIcon,
      @NonNull TextView appNameTextView, @NonNull TextView conceptsCountTextView,
      @NonNull Button conceptsDownloadButton, @NonNull TextView conceptsTextView,
      @NonNull LinearLayout contactUsLayout, @NonNull SwitchCompat darkModeSwitch,
      @NonNull Button languageApplyButton, @NonNull TextView languageHeader,
      @NonNull Spinner languageSpinner, @NonNull ConstraintLayout linearLayout,
      @NonNull TextView logsDesc1TextView, @NonNull TextView logsDesc2TextView,
      @NonNull LinearLayout logsLayout, @NonNull LinearLayout privacyPolicyLayout,
      @NonNull LinearLayout rateUsLayout, @NonNull TextView versionTextView, @NonNull View view,
      @NonNull View viewDivider1) {
    this.rootView = rootView;
    this.appIcon = appIcon;
    this.appNameTextView = appNameTextView;
    this.conceptsCountTextView = conceptsCountTextView;
    this.conceptsDownloadButton = conceptsDownloadButton;
    this.conceptsTextView = conceptsTextView;
    this.contactUsLayout = contactUsLayout;
    this.darkModeSwitch = darkModeSwitch;
    this.languageApplyButton = languageApplyButton;
    this.languageHeader = languageHeader;
    this.languageSpinner = languageSpinner;
    this.linearLayout = linearLayout;
    this.logsDesc1TextView = logsDesc1TextView;
    this.logsDesc2TextView = logsDesc2TextView;
    this.logsLayout = logsLayout;
    this.privacyPolicyLayout = privacyPolicyLayout;
    this.rateUsLayout = rateUsLayout;
    this.versionTextView = versionTextView;
    this.view = view;
    this.viewDivider1 = viewDivider1;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_icon;
      ImageView appIcon = rootView.findViewById(id);
      if (appIcon == null) {
        break missingId;
      }

      id = R.id.app_name_textView;
      TextView appNameTextView = rootView.findViewById(id);
      if (appNameTextView == null) {
        break missingId;
      }

      id = R.id.concepts_count_textView;
      TextView conceptsCountTextView = rootView.findViewById(id);
      if (conceptsCountTextView == null) {
        break missingId;
      }

      id = R.id.concepts_download_button;
      Button conceptsDownloadButton = rootView.findViewById(id);
      if (conceptsDownloadButton == null) {
        break missingId;
      }

      id = R.id.concepts_textView;
      TextView conceptsTextView = rootView.findViewById(id);
      if (conceptsTextView == null) {
        break missingId;
      }

      id = R.id.contact_us_layout;
      LinearLayout contactUsLayout = rootView.findViewById(id);
      if (contactUsLayout == null) {
        break missingId;
      }

      id = R.id.dark_mode_switch;
      SwitchCompat darkModeSwitch = rootView.findViewById(id);
      if (darkModeSwitch == null) {
        break missingId;
      }

      id = R.id.language_apply_button;
      Button languageApplyButton = rootView.findViewById(id);
      if (languageApplyButton == null) {
        break missingId;
      }

      id = R.id.language_header;
      TextView languageHeader = rootView.findViewById(id);
      if (languageHeader == null) {
        break missingId;
      }

      id = R.id.language_spinner;
      Spinner languageSpinner = rootView.findViewById(id);
      if (languageSpinner == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      ConstraintLayout linearLayout = rootView.findViewById(id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.logs_desc1_textView;
      TextView logsDesc1TextView = rootView.findViewById(id);
      if (logsDesc1TextView == null) {
        break missingId;
      }

      id = R.id.logs_desc2_textView;
      TextView logsDesc2TextView = rootView.findViewById(id);
      if (logsDesc2TextView == null) {
        break missingId;
      }

      id = R.id.logs_layout;
      LinearLayout logsLayout = rootView.findViewById(id);
      if (logsLayout == null) {
        break missingId;
      }

      id = R.id.privacy_policy_layout;
      LinearLayout privacyPolicyLayout = rootView.findViewById(id);
      if (privacyPolicyLayout == null) {
        break missingId;
      }

      id = R.id.rate_us_layout;
      LinearLayout rateUsLayout = rootView.findViewById(id);
      if (rateUsLayout == null) {
        break missingId;
      }

      id = R.id.version_textView;
      TextView versionTextView = rootView.findViewById(id);
      if (versionTextView == null) {
        break missingId;
      }

      id = R.id.view;
      View view = rootView.findViewById(id);
      if (view == null) {
        break missingId;
      }

      id = R.id.view_divider1;
      View viewDivider1 = rootView.findViewById(id);
      if (viewDivider1 == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((ScrollView) rootView, appIcon, appNameTextView,
          conceptsCountTextView, conceptsDownloadButton, conceptsTextView, contactUsLayout,
          darkModeSwitch, languageApplyButton, languageHeader, languageSpinner, linearLayout,
          logsDesc1TextView, logsDesc2TextView, logsLayout, privacyPolicyLayout, rateUsLayout,
          versionTextView, view, viewDivider1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
