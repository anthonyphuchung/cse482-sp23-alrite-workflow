// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class RowPatientDetailsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView syncedPatientDisplayName;

  @NonNull
  public final ImageView syncedPatientGender;

  @NonNull
  public final TextView syncedPatientIdentifier;

  @NonNull
  public final TextView visitStatusLabel;

  private RowPatientDetailsBinding(@NonNull CardView rootView,
      @NonNull TextView syncedPatientDisplayName, @NonNull ImageView syncedPatientGender,
      @NonNull TextView syncedPatientIdentifier, @NonNull TextView visitStatusLabel) {
    this.rootView = rootView;
    this.syncedPatientDisplayName = syncedPatientDisplayName;
    this.syncedPatientGender = syncedPatientGender;
    this.syncedPatientIdentifier = syncedPatientIdentifier;
    this.visitStatusLabel = visitStatusLabel;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RowPatientDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowPatientDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_patient_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowPatientDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.syncedPatientDisplayName;
      TextView syncedPatientDisplayName = rootView.findViewById(id);
      if (syncedPatientDisplayName == null) {
        break missingId;
      }

      id = R.id.syncedPatientGender;
      ImageView syncedPatientGender = rootView.findViewById(id);
      if (syncedPatientGender == null) {
        break missingId;
      }

      id = R.id.syncedPatientIdentifier;
      TextView syncedPatientIdentifier = rootView.findViewById(id);
      if (syncedPatientIdentifier == null) {
        break missingId;
      }

      id = R.id.visitStatusLabel;
      TextView visitStatusLabel = rootView.findViewById(id);
      if (visitStatusLabel == null) {
        break missingId;
      }

      return new RowPatientDetailsBinding((CardView) rootView, syncedPatientDisplayName,
          syncedPatientGender, syncedPatientIdentifier, visitStatusLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
