// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class FragmentDialogLayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final LinearLayout dialogForm;

  @NonNull
  public final LinearLayout dialogFormButtons;

  @NonNull
  public final Button dialogFormButtonsCancelButton;

  @NonNull
  public final Button dialogFormButtonsSubmitButton;

  @NonNull
  public final RelativeLayout dialogRelativeForm;

  private FragmentDialogLayoutBinding(@NonNull RelativeLayout rootView,
      @NonNull LinearLayout dialogForm, @NonNull LinearLayout dialogFormButtons,
      @NonNull Button dialogFormButtonsCancelButton, @NonNull Button dialogFormButtonsSubmitButton,
      @NonNull RelativeLayout dialogRelativeForm) {
    this.rootView = rootView;
    this.dialogForm = dialogForm;
    this.dialogFormButtons = dialogFormButtons;
    this.dialogFormButtonsCancelButton = dialogFormButtonsCancelButton;
    this.dialogFormButtonsSubmitButton = dialogFormButtonsSubmitButton;
    this.dialogRelativeForm = dialogRelativeForm;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDialogLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDialogLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dialog_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDialogLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dialogForm;
      LinearLayout dialogForm = rootView.findViewById(id);
      if (dialogForm == null) {
        break missingId;
      }

      id = R.id.dialogFormButtons;
      LinearLayout dialogFormButtons = rootView.findViewById(id);
      if (dialogFormButtons == null) {
        break missingId;
      }

      id = R.id.dialogFormButtonsCancelButton;
      Button dialogFormButtonsCancelButton = rootView.findViewById(id);
      if (dialogFormButtonsCancelButton == null) {
        break missingId;
      }

      id = R.id.dialogFormButtonsSubmitButton;
      Button dialogFormButtonsSubmitButton = rootView.findViewById(id);
      if (dialogFormButtonsSubmitButton == null) {
        break missingId;
      }

      RelativeLayout dialogRelativeForm = (RelativeLayout) rootView;

      return new FragmentDialogLayoutBinding((RelativeLayout) rootView, dialogForm,
          dialogFormButtons, dialogFormButtonsCancelButton, dialogFormButtonsSubmitButton,
          dialogRelativeForm);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
