// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewpager.widget.ViewPager;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class ActivityFormDisplayBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnNext;

  @NonNull
  public final Button btnSubmit;

  @NonNull
  public final RelativeLayout buttonContainer;

  @NonNull
  public final RelativeLayout formMainContainer;

  @NonNull
  public final LinearLayout pagerContainer;

  @NonNull
  public final ViewPager viewPager;

  @NonNull
  public final LinearLayout viewPagerCountDots;

  @NonNull
  public final RelativeLayout viewPagerIndicator;

  private ActivityFormDisplayBinding(@NonNull ScrollView rootView, @NonNull Button btnNext,
      @NonNull Button btnSubmit, @NonNull RelativeLayout buttonContainer,
      @NonNull RelativeLayout formMainContainer, @NonNull LinearLayout pagerContainer,
      @NonNull ViewPager viewPager, @NonNull LinearLayout viewPagerCountDots,
      @NonNull RelativeLayout viewPagerIndicator) {
    this.rootView = rootView;
    this.btnNext = btnNext;
    this.btnSubmit = btnSubmit;
    this.buttonContainer = buttonContainer;
    this.formMainContainer = formMainContainer;
    this.pagerContainer = pagerContainer;
    this.viewPager = viewPager;
    this.viewPagerCountDots = viewPagerCountDots;
    this.viewPagerIndicator = viewPagerIndicator;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFormDisplayBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFormDisplayBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_form_display, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFormDisplayBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_next;
      Button btnNext = rootView.findViewById(id);
      if (btnNext == null) {
        break missingId;
      }

      id = R.id.btn_submit;
      Button btnSubmit = rootView.findViewById(id);
      if (btnSubmit == null) {
        break missingId;
      }

      id = R.id.buttonContainer;
      RelativeLayout buttonContainer = rootView.findViewById(id);
      if (buttonContainer == null) {
        break missingId;
      }

      id = R.id.formMainContainer;
      RelativeLayout formMainContainer = rootView.findViewById(id);
      if (formMainContainer == null) {
        break missingId;
      }

      id = R.id.pagerContainer;
      LinearLayout pagerContainer = rootView.findViewById(id);
      if (pagerContainer == null) {
        break missingId;
      }

      id = R.id.view_pager;
      ViewPager viewPager = rootView.findViewById(id);
      if (viewPager == null) {
        break missingId;
      }

      id = R.id.viewPagerCountDots;
      LinearLayout viewPagerCountDots = rootView.findViewById(id);
      if (viewPagerCountDots == null) {
        break missingId;
      }

      id = R.id.viewPagerIndicator;
      RelativeLayout viewPagerIndicator = rootView.findViewById(id);
      if (viewPagerIndicator == null) {
        break missingId;
      }

      return new ActivityFormDisplayBinding((ScrollView) rootView, btnNext, btnSubmit,
          buttonContainer, formMainContainer, pagerContainer, viewPager, viewPagerCountDots,
          viewPagerIndicator);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
