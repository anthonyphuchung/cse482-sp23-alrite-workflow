// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AutoCompleteTextView;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.SwitchCompat;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputLayout;
import com.hbb20.CountryCodePicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class FragmentPatientInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout addEditConstraintLayout;

  @NonNull
  public final CardView addressCardview;

  @NonNull
  public final TextView addressError;

  @NonNull
  public final EditText addressOne;

  @NonNull
  public final EditText addressTwo;

  @NonNull
  public final FloatingActionButton capturePhoto;

  @NonNull
  public final AutoCompleteTextView cityAutoComplete;

  @NonNull
  public final ProgressBar cityProgressBar;

  @NonNull
  public final ConstraintLayout constraintLayoutDOB;

  @NonNull
  public final CountryCodePicker countryCodeSpinner;

  @NonNull
  public final LinearLayout countryPickerLayout;

  @NonNull
  public final ImageButton datePicker;

  @NonNull
  public final CardView deceasedCardview;

  @NonNull
  public final SwitchCompat deceasedCheckbox;

  @NonNull
  public final ProgressBar deceasedProgressBar;

  @NonNull
  public final Spinner deceasedSpinner;

  @NonNull
  public final CardView demographicCardview;

  @NonNull
  public final EditText dobEditText;

  @NonNull
  public final TextView dobError;

  @NonNull
  public final EditText estimatedMonth;

  @NonNull
  public final EditText estimatedYear;

  @NonNull
  public final RadioButton female;

  @NonNull
  public final EditText firstName;

  @NonNull
  public final RadioGroup gender;

  @NonNull
  public final TextView gendererror;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final LinearLayout linearLayoutContactInfo;

  @NonNull
  public final LinearLayout linearLayoutGender;

  @NonNull
  public final LinearLayout linearLayoutName;

  @NonNull
  public final RadioButton male;

  @NonNull
  public final EditText middlename;

  @NonNull
  public final ImageView patientPhoto;

  @NonNull
  public final CardView photoCardview;

  @NonNull
  public final TextView photoTitle;

  @NonNull
  public final EditText postalCode;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final AutoCompleteTextView stateAutoComplete;

  @NonNull
  public final EditText surname;

  @NonNull
  public final TextInputLayout textInputLayoutAddress;

  @NonNull
  public final TextInputLayout textInputLayoutAddress2;

  @NonNull
  public final TextInputLayout textInputLayoutCity;

  @NonNull
  public final TextInputLayout textInputLayoutDOB;

  @NonNull
  public final TextInputLayout textInputLayoutFirstName;

  @NonNull
  public final TextInputLayout textInputLayoutMiddlename;

  @NonNull
  public final TextInputLayout textInputLayoutMonth;

  @NonNull
  public final TextInputLayout textInputLayoutState;

  @NonNull
  public final TextInputLayout textInputLayoutSurname;

  @NonNull
  public final TextInputLayout textInputLayoutYear;

  @NonNull
  public final View transpScreenScreen;

  @NonNull
  public final SwitchCompat unidentifiedCheckbox;

  @NonNull
  public final CardView unknownCardview;

  private FragmentPatientInfoBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout addEditConstraintLayout, @NonNull CardView addressCardview,
      @NonNull TextView addressError, @NonNull EditText addressOne, @NonNull EditText addressTwo,
      @NonNull FloatingActionButton capturePhoto, @NonNull AutoCompleteTextView cityAutoComplete,
      @NonNull ProgressBar cityProgressBar, @NonNull ConstraintLayout constraintLayoutDOB,
      @NonNull CountryCodePicker countryCodeSpinner, @NonNull LinearLayout countryPickerLayout,
      @NonNull ImageButton datePicker, @NonNull CardView deceasedCardview,
      @NonNull SwitchCompat deceasedCheckbox, @NonNull ProgressBar deceasedProgressBar,
      @NonNull Spinner deceasedSpinner, @NonNull CardView demographicCardview,
      @NonNull EditText dobEditText, @NonNull TextView dobError, @NonNull EditText estimatedMonth,
      @NonNull EditText estimatedYear, @NonNull RadioButton female, @NonNull EditText firstName,
      @NonNull RadioGroup gender, @NonNull TextView gendererror, @NonNull Guideline guideline,
      @NonNull LinearLayout linearLayoutContactInfo, @NonNull LinearLayout linearLayoutGender,
      @NonNull LinearLayout linearLayoutName, @NonNull RadioButton male,
      @NonNull EditText middlename, @NonNull ImageView patientPhoto,
      @NonNull CardView photoCardview, @NonNull TextView photoTitle, @NonNull EditText postalCode,
      @NonNull ProgressBar progressBar, @NonNull ScrollView scrollView,
      @NonNull AutoCompleteTextView stateAutoComplete, @NonNull EditText surname,
      @NonNull TextInputLayout textInputLayoutAddress,
      @NonNull TextInputLayout textInputLayoutAddress2,
      @NonNull TextInputLayout textInputLayoutCity, @NonNull TextInputLayout textInputLayoutDOB,
      @NonNull TextInputLayout textInputLayoutFirstName,
      @NonNull TextInputLayout textInputLayoutMiddlename,
      @NonNull TextInputLayout textInputLayoutMonth, @NonNull TextInputLayout textInputLayoutState,
      @NonNull TextInputLayout textInputLayoutSurname, @NonNull TextInputLayout textInputLayoutYear,
      @NonNull View transpScreenScreen, @NonNull SwitchCompat unidentifiedCheckbox,
      @NonNull CardView unknownCardview) {
    this.rootView = rootView;
    this.addEditConstraintLayout = addEditConstraintLayout;
    this.addressCardview = addressCardview;
    this.addressError = addressError;
    this.addressOne = addressOne;
    this.addressTwo = addressTwo;
    this.capturePhoto = capturePhoto;
    this.cityAutoComplete = cityAutoComplete;
    this.cityProgressBar = cityProgressBar;
    this.constraintLayoutDOB = constraintLayoutDOB;
    this.countryCodeSpinner = countryCodeSpinner;
    this.countryPickerLayout = countryPickerLayout;
    this.datePicker = datePicker;
    this.deceasedCardview = deceasedCardview;
    this.deceasedCheckbox = deceasedCheckbox;
    this.deceasedProgressBar = deceasedProgressBar;
    this.deceasedSpinner = deceasedSpinner;
    this.demographicCardview = demographicCardview;
    this.dobEditText = dobEditText;
    this.dobError = dobError;
    this.estimatedMonth = estimatedMonth;
    this.estimatedYear = estimatedYear;
    this.female = female;
    this.firstName = firstName;
    this.gender = gender;
    this.gendererror = gendererror;
    this.guideline = guideline;
    this.linearLayoutContactInfo = linearLayoutContactInfo;
    this.linearLayoutGender = linearLayoutGender;
    this.linearLayoutName = linearLayoutName;
    this.male = male;
    this.middlename = middlename;
    this.patientPhoto = patientPhoto;
    this.photoCardview = photoCardview;
    this.photoTitle = photoTitle;
    this.postalCode = postalCode;
    this.progressBar = progressBar;
    this.scrollView = scrollView;
    this.stateAutoComplete = stateAutoComplete;
    this.surname = surname;
    this.textInputLayoutAddress = textInputLayoutAddress;
    this.textInputLayoutAddress2 = textInputLayoutAddress2;
    this.textInputLayoutCity = textInputLayoutCity;
    this.textInputLayoutDOB = textInputLayoutDOB;
    this.textInputLayoutFirstName = textInputLayoutFirstName;
    this.textInputLayoutMiddlename = textInputLayoutMiddlename;
    this.textInputLayoutMonth = textInputLayoutMonth;
    this.textInputLayoutState = textInputLayoutState;
    this.textInputLayoutSurname = textInputLayoutSurname;
    this.textInputLayoutYear = textInputLayoutYear;
    this.transpScreenScreen = transpScreenScreen;
    this.unidentifiedCheckbox = unidentifiedCheckbox;
    this.unknownCardview = unknownCardview;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPatientInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPatientInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_patient_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPatientInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout addEditConstraintLayout = (ConstraintLayout) rootView;

      id = R.id.address_cardview;
      CardView addressCardview = rootView.findViewById(id);
      if (addressCardview == null) {
        break missingId;
      }

      id = R.id.addressError;
      TextView addressError = rootView.findViewById(id);
      if (addressError == null) {
        break missingId;
      }

      id = R.id.addressOne;
      EditText addressOne = rootView.findViewById(id);
      if (addressOne == null) {
        break missingId;
      }

      id = R.id.addressTwo;
      EditText addressTwo = rootView.findViewById(id);
      if (addressTwo == null) {
        break missingId;
      }

      id = R.id.capture_photo;
      FloatingActionButton capturePhoto = rootView.findViewById(id);
      if (capturePhoto == null) {
        break missingId;
      }

      id = R.id.cityAutoComplete;
      AutoCompleteTextView cityAutoComplete = rootView.findViewById(id);
      if (cityAutoComplete == null) {
        break missingId;
      }

      id = R.id.city_progressBar;
      ProgressBar cityProgressBar = rootView.findViewById(id);
      if (cityProgressBar == null) {
        break missingId;
      }

      id = R.id.constraintLayoutDOB;
      ConstraintLayout constraintLayoutDOB = rootView.findViewById(id);
      if (constraintLayoutDOB == null) {
        break missingId;
      }

      id = R.id.countryCodeSpinner;
      CountryCodePicker countryCodeSpinner = rootView.findViewById(id);
      if (countryCodeSpinner == null) {
        break missingId;
      }

      id = R.id.country_picker_layout;
      LinearLayout countryPickerLayout = rootView.findViewById(id);
      if (countryPickerLayout == null) {
        break missingId;
      }

      id = R.id.datePicker;
      ImageButton datePicker = rootView.findViewById(id);
      if (datePicker == null) {
        break missingId;
      }

      id = R.id.deceased_cardview;
      CardView deceasedCardview = rootView.findViewById(id);
      if (deceasedCardview == null) {
        break missingId;
      }

      id = R.id.deceased_checkbox;
      SwitchCompat deceasedCheckbox = rootView.findViewById(id);
      if (deceasedCheckbox == null) {
        break missingId;
      }

      id = R.id.deceased_progressBar;
      ProgressBar deceasedProgressBar = rootView.findViewById(id);
      if (deceasedProgressBar == null) {
        break missingId;
      }

      id = R.id.deceased_spinner;
      Spinner deceasedSpinner = rootView.findViewById(id);
      if (deceasedSpinner == null) {
        break missingId;
      }

      id = R.id.demographic_cardview;
      CardView demographicCardview = rootView.findViewById(id);
      if (demographicCardview == null) {
        break missingId;
      }

      id = R.id.dobEditText;
      EditText dobEditText = rootView.findViewById(id);
      if (dobEditText == null) {
        break missingId;
      }

      id = R.id.dobError;
      TextView dobError = rootView.findViewById(id);
      if (dobError == null) {
        break missingId;
      }

      id = R.id.estimatedMonth;
      EditText estimatedMonth = rootView.findViewById(id);
      if (estimatedMonth == null) {
        break missingId;
      }

      id = R.id.estimatedYear;
      EditText estimatedYear = rootView.findViewById(id);
      if (estimatedYear == null) {
        break missingId;
      }

      id = R.id.female;
      RadioButton female = rootView.findViewById(id);
      if (female == null) {
        break missingId;
      }

      id = R.id.firstName;
      EditText firstName = rootView.findViewById(id);
      if (firstName == null) {
        break missingId;
      }

      id = R.id.gender;
      RadioGroup gender = rootView.findViewById(id);
      if (gender == null) {
        break missingId;
      }

      id = R.id.gendererror;
      TextView gendererror = rootView.findViewById(id);
      if (gendererror == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = rootView.findViewById(id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.linearLayout_contact_info;
      LinearLayout linearLayoutContactInfo = rootView.findViewById(id);
      if (linearLayoutContactInfo == null) {
        break missingId;
      }

      id = R.id.linearLayout_gender;
      LinearLayout linearLayoutGender = rootView.findViewById(id);
      if (linearLayoutGender == null) {
        break missingId;
      }

      id = R.id.linearLayoutName;
      LinearLayout linearLayoutName = rootView.findViewById(id);
      if (linearLayoutName == null) {
        break missingId;
      }

      id = R.id.male;
      RadioButton male = rootView.findViewById(id);
      if (male == null) {
        break missingId;
      }

      id = R.id.middlename;
      EditText middlename = rootView.findViewById(id);
      if (middlename == null) {
        break missingId;
      }

      id = R.id.patientPhoto;
      ImageView patientPhoto = rootView.findViewById(id);
      if (patientPhoto == null) {
        break missingId;
      }

      id = R.id.photo_cardview;
      CardView photoCardview = rootView.findViewById(id);
      if (photoCardview == null) {
        break missingId;
      }

      id = R.id.photo_title;
      TextView photoTitle = rootView.findViewById(id);
      if (photoTitle == null) {
        break missingId;
      }

      id = R.id.postalCode;
      EditText postalCode = rootView.findViewById(id);
      if (postalCode == null) {
        break missingId;
      }

      id = R.id.progress_bar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = rootView.findViewById(id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.stateAutoComplete;
      AutoCompleteTextView stateAutoComplete = rootView.findViewById(id);
      if (stateAutoComplete == null) {
        break missingId;
      }

      id = R.id.surname;
      EditText surname = rootView.findViewById(id);
      if (surname == null) {
        break missingId;
      }

      id = R.id.textInputLayoutAddress;
      TextInputLayout textInputLayoutAddress = rootView.findViewById(id);
      if (textInputLayoutAddress == null) {
        break missingId;
      }

      id = R.id.textInputLayoutAddress2;
      TextInputLayout textInputLayoutAddress2 = rootView.findViewById(id);
      if (textInputLayoutAddress2 == null) {
        break missingId;
      }

      id = R.id.textInputLayoutCity;
      TextInputLayout textInputLayoutCity = rootView.findViewById(id);
      if (textInputLayoutCity == null) {
        break missingId;
      }

      id = R.id.textInputLayoutDOB;
      TextInputLayout textInputLayoutDOB = rootView.findViewById(id);
      if (textInputLayoutDOB == null) {
        break missingId;
      }

      id = R.id.textInputLayoutFirstName;
      TextInputLayout textInputLayoutFirstName = rootView.findViewById(id);
      if (textInputLayoutFirstName == null) {
        break missingId;
      }

      id = R.id.textInputLayoutMiddlename;
      TextInputLayout textInputLayoutMiddlename = rootView.findViewById(id);
      if (textInputLayoutMiddlename == null) {
        break missingId;
      }

      id = R.id.textInputLayoutMonth;
      TextInputLayout textInputLayoutMonth = rootView.findViewById(id);
      if (textInputLayoutMonth == null) {
        break missingId;
      }

      id = R.id.textInputLayoutState;
      TextInputLayout textInputLayoutState = rootView.findViewById(id);
      if (textInputLayoutState == null) {
        break missingId;
      }

      id = R.id.textInputLayoutSurname;
      TextInputLayout textInputLayoutSurname = rootView.findViewById(id);
      if (textInputLayoutSurname == null) {
        break missingId;
      }

      id = R.id.textInputLayoutYear;
      TextInputLayout textInputLayoutYear = rootView.findViewById(id);
      if (textInputLayoutYear == null) {
        break missingId;
      }

      id = R.id.transp_screen_screen;
      View transpScreenScreen = rootView.findViewById(id);
      if (transpScreenScreen == null) {
        break missingId;
      }

      id = R.id.unidentified_checkbox;
      SwitchCompat unidentifiedCheckbox = rootView.findViewById(id);
      if (unidentifiedCheckbox == null) {
        break missingId;
      }

      id = R.id.unknown_cardview;
      CardView unknownCardview = rootView.findViewById(id);
      if (unknownCardview == null) {
        break missingId;
      }

      return new FragmentPatientInfoBinding((ConstraintLayout) rootView, addEditConstraintLayout,
          addressCardview, addressError, addressOne, addressTwo, capturePhoto, cityAutoComplete,
          cityProgressBar, constraintLayoutDOB, countryCodeSpinner, countryPickerLayout, datePicker,
          deceasedCardview, deceasedCheckbox, deceasedProgressBar, deceasedSpinner,
          demographicCardview, dobEditText, dobError, estimatedMonth, estimatedYear, female,
          firstName, gender, gendererror, guideline, linearLayoutContactInfo, linearLayoutGender,
          linearLayoutName, male, middlename, patientPhoto, photoCardview, photoTitle, postalCode,
          progressBar, scrollView, stateAutoComplete, surname, textInputLayoutAddress,
          textInputLayoutAddress2, textInputLayoutCity, textInputLayoutDOB,
          textInputLayoutFirstName, textInputLayoutMiddlename, textInputLayoutMonth,
          textInputLayoutState, textInputLayoutSurname, textInputLayoutYear, transpScreenScreen,
          unidentifiedCheckbox, unknownCardview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
