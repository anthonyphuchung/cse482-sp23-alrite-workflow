// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class FragmentPatientVitalsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton formEditIcon;

  @NonNull
  public final TextView lastVitalsDate;

  @NonNull
  public final TextView lastVitalsLabel;

  @NonNull
  public final LinearLayout lastVitalsLayout;

  @NonNull
  public final TextView lastVitalsNoneLabel;

  @NonNull
  public final LinearLayout vitalsDetailsContent;

  private FragmentPatientVitalsBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton formEditIcon, @NonNull TextView lastVitalsDate,
      @NonNull TextView lastVitalsLabel, @NonNull LinearLayout lastVitalsLayout,
      @NonNull TextView lastVitalsNoneLabel, @NonNull LinearLayout vitalsDetailsContent) {
    this.rootView = rootView;
    this.formEditIcon = formEditIcon;
    this.lastVitalsDate = lastVitalsDate;
    this.lastVitalsLabel = lastVitalsLabel;
    this.lastVitalsLayout = lastVitalsLayout;
    this.lastVitalsNoneLabel = lastVitalsNoneLabel;
    this.vitalsDetailsContent = vitalsDetailsContent;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPatientVitalsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPatientVitalsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_patient_vitals, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPatientVitalsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.form_edit_icon;
      ImageButton formEditIcon = rootView.findViewById(id);
      if (formEditIcon == null) {
        break missingId;
      }

      id = R.id.lastVitalsDate;
      TextView lastVitalsDate = rootView.findViewById(id);
      if (lastVitalsDate == null) {
        break missingId;
      }

      id = R.id.lastVitalsLabel;
      TextView lastVitalsLabel = rootView.findViewById(id);
      if (lastVitalsLabel == null) {
        break missingId;
      }

      id = R.id.lastVitalsLayout;
      LinearLayout lastVitalsLayout = rootView.findViewById(id);
      if (lastVitalsLayout == null) {
        break missingId;
      }

      id = R.id.lastVitalsNoneLabel;
      TextView lastVitalsNoneLabel = rootView.findViewById(id);
      if (lastVitalsNoneLabel == null) {
        break missingId;
      }

      id = R.id.vitalsDetailsContent;
      LinearLayout vitalsDetailsContent = rootView.findViewById(id);
      if (vitalsDetailsContent == null) {
        break missingId;
      }

      return new FragmentPatientVitalsBinding((RelativeLayout) rootView, formEditIcon,
          lastVitalsDate, lastVitalsLabel, lastVitalsLayout, lastVitalsNoneLabel,
          vitalsDetailsContent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
