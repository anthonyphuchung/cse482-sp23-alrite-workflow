// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.switchmaterial.SwitchMaterial;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class FragmentLoginBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView alriteLogo;

  @NonNull
  public final ImageView drawPencil;

  @NonNull
  public final ProgressBar locationLoadingProgressBar;

  @NonNull
  public final Spinner locationSpinner;

  @NonNull
  public final MaterialButton loginButton;

  @NonNull
  public final LinearLayout loginFormView;

  @NonNull
  public final ProgressBar loginLoading;

  @NonNull
  public final TextInputEditText loginPasswordField;

  @NonNull
  public final SwitchMaterial loginSyncButton;

  @NonNull
  public final EditText loginUrlField;

  @NonNull
  public final TextInputEditText loginUsernameField;

  @NonNull
  public final TextView organizationDescription;

  @NonNull
  public final TextView organizationName;

  @NonNull
  public final TextView syncLabel;

  @NonNull
  public final ConstraintLayout textInputLayoutLoginURL;

  @NonNull
  public final TextInputLayout textInputLayoutPassword;

  @NonNull
  public final TextInputLayout textInputLayoutUsername;

  @NonNull
  public final View view;

  private FragmentLoginBinding(@NonNull ScrollView rootView, @NonNull ImageView alriteLogo,
      @NonNull ImageView drawPencil, @NonNull ProgressBar locationLoadingProgressBar,
      @NonNull Spinner locationSpinner, @NonNull MaterialButton loginButton,
      @NonNull LinearLayout loginFormView, @NonNull ProgressBar loginLoading,
      @NonNull TextInputEditText loginPasswordField, @NonNull SwitchMaterial loginSyncButton,
      @NonNull EditText loginUrlField, @NonNull TextInputEditText loginUsernameField,
      @NonNull TextView organizationDescription, @NonNull TextView organizationName,
      @NonNull TextView syncLabel, @NonNull ConstraintLayout textInputLayoutLoginURL,
      @NonNull TextInputLayout textInputLayoutPassword,
      @NonNull TextInputLayout textInputLayoutUsername, @NonNull View view) {
    this.rootView = rootView;
    this.alriteLogo = alriteLogo;
    this.drawPencil = drawPencil;
    this.locationLoadingProgressBar = locationLoadingProgressBar;
    this.locationSpinner = locationSpinner;
    this.loginButton = loginButton;
    this.loginFormView = loginFormView;
    this.loginLoading = loginLoading;
    this.loginPasswordField = loginPasswordField;
    this.loginSyncButton = loginSyncButton;
    this.loginUrlField = loginUrlField;
    this.loginUsernameField = loginUsernameField;
    this.organizationDescription = organizationDescription;
    this.organizationName = organizationName;
    this.syncLabel = syncLabel;
    this.textInputLayoutLoginURL = textInputLayoutLoginURL;
    this.textInputLayoutPassword = textInputLayoutPassword;
    this.textInputLayoutUsername = textInputLayoutUsername;
    this.view = view;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.alriteLogo;
      ImageView alriteLogo = rootView.findViewById(id);
      if (alriteLogo == null) {
        break missingId;
      }

      id = R.id.draw_pencil;
      ImageView drawPencil = rootView.findViewById(id);
      if (drawPencil == null) {
        break missingId;
      }

      id = R.id.locationLoadingProgressBar;
      ProgressBar locationLoadingProgressBar = rootView.findViewById(id);
      if (locationLoadingProgressBar == null) {
        break missingId;
      }

      id = R.id.locationSpinner;
      Spinner locationSpinner = rootView.findViewById(id);
      if (locationSpinner == null) {
        break missingId;
      }

      id = R.id.loginButton;
      MaterialButton loginButton = rootView.findViewById(id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.loginFormView;
      LinearLayout loginFormView = rootView.findViewById(id);
      if (loginFormView == null) {
        break missingId;
      }

      id = R.id.loginLoading;
      ProgressBar loginLoading = rootView.findViewById(id);
      if (loginLoading == null) {
        break missingId;
      }

      id = R.id.loginPasswordField;
      TextInputEditText loginPasswordField = rootView.findViewById(id);
      if (loginPasswordField == null) {
        break missingId;
      }

      id = R.id.loginSyncButton;
      SwitchMaterial loginSyncButton = rootView.findViewById(id);
      if (loginSyncButton == null) {
        break missingId;
      }

      id = R.id.loginUrlField;
      EditText loginUrlField = rootView.findViewById(id);
      if (loginUrlField == null) {
        break missingId;
      }

      id = R.id.loginUsernameField;
      TextInputEditText loginUsernameField = rootView.findViewById(id);
      if (loginUsernameField == null) {
        break missingId;
      }

      id = R.id.organization_description;
      TextView organizationDescription = rootView.findViewById(id);
      if (organizationDescription == null) {
        break missingId;
      }

      id = R.id.organization_name;
      TextView organizationName = rootView.findViewById(id);
      if (organizationName == null) {
        break missingId;
      }

      id = R.id.syncLabel;
      TextView syncLabel = rootView.findViewById(id);
      if (syncLabel == null) {
        break missingId;
      }

      id = R.id.textInputLayoutLoginURL;
      ConstraintLayout textInputLayoutLoginURL = rootView.findViewById(id);
      if (textInputLayoutLoginURL == null) {
        break missingId;
      }

      id = R.id.textInputLayoutPassword;
      TextInputLayout textInputLayoutPassword = rootView.findViewById(id);
      if (textInputLayoutPassword == null) {
        break missingId;
      }

      id = R.id.textInputLayoutUsername;
      TextInputLayout textInputLayoutUsername = rootView.findViewById(id);
      if (textInputLayoutUsername == null) {
        break missingId;
      }

      id = R.id.view;
      View view = rootView.findViewById(id);
      if (view == null) {
        break missingId;
      }

      return new FragmentLoginBinding((ScrollView) rootView, alriteLogo, drawPencil,
          locationLoadingProgressBar, locationSpinner, loginButton, loginFormView, loginLoading,
          loginPasswordField, loginSyncButton, loginUrlField, loginUsernameField,
          organizationDescription, organizationName, syncLabel, textInputLayoutLoginURL,
          textInputLayoutPassword, textInputLayoutUsername, view);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
