// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class RowPatientVisitBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final TextView endDate;

  @NonNull
  public final TextView patientVisitEndDate;

  @NonNull
  public final TextView patientVisitPlace;

  @NonNull
  public final TextView patientVisitStartDate;

  @NonNull
  public final TextView startDate;

  @NonNull
  public final ConstraintLayout visitRow;

  @NonNull
  public final LinearLayout visitStatus;

  @NonNull
  public final TextView visitStatusLabel;

  private RowPatientVisitBinding(@NonNull CardView rootView, @NonNull TextView endDate,
      @NonNull TextView patientVisitEndDate, @NonNull TextView patientVisitPlace,
      @NonNull TextView patientVisitStartDate, @NonNull TextView startDate,
      @NonNull ConstraintLayout visitRow, @NonNull LinearLayout visitStatus,
      @NonNull TextView visitStatusLabel) {
    this.rootView = rootView;
    this.endDate = endDate;
    this.patientVisitEndDate = patientVisitEndDate;
    this.patientVisitPlace = patientVisitPlace;
    this.patientVisitStartDate = patientVisitStartDate;
    this.startDate = startDate;
    this.visitRow = visitRow;
    this.visitStatus = visitStatus;
    this.visitStatusLabel = visitStatusLabel;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static RowPatientVisitBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowPatientVisitBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_patient_visit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowPatientVisitBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.endDate;
      TextView endDate = rootView.findViewById(id);
      if (endDate == null) {
        break missingId;
      }

      id = R.id.patientVisitEndDate;
      TextView patientVisitEndDate = rootView.findViewById(id);
      if (patientVisitEndDate == null) {
        break missingId;
      }

      id = R.id.patientVisitPlace;
      TextView patientVisitPlace = rootView.findViewById(id);
      if (patientVisitPlace == null) {
        break missingId;
      }

      id = R.id.patientVisitStartDate;
      TextView patientVisitStartDate = rootView.findViewById(id);
      if (patientVisitStartDate == null) {
        break missingId;
      }

      id = R.id.startDate;
      TextView startDate = rootView.findViewById(id);
      if (startDate == null) {
        break missingId;
      }

      id = R.id.visitRow;
      ConstraintLayout visitRow = rootView.findViewById(id);
      if (visitRow == null) {
        break missingId;
      }

      id = R.id.visitStatus;
      LinearLayout visitStatus = rootView.findViewById(id);
      if (visitStatus == null) {
        break missingId;
      }

      id = R.id.visitStatusLabel;
      TextView visitStatusLabel = rootView.findViewById(id);
      if (visitStatusLabel == null) {
        break missingId;
      }

      return new RowPatientVisitBinding((CardView) rootView, endDate, patientVisitEndDate,
          patientVisitPlace, patientVisitStartDate, startDate, visitRow, visitStatus,
          visitStatusLabel);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
