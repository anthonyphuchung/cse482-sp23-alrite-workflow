// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView activeVisitsButton;

  @NonNull
  public final CardView activeVisitsCardView;

  @NonNull
  public final TextView activeVisitsLabel;

  @NonNull
  public final RelativeLayout activeVisitsView;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ImageView findPatientButton;

  @NonNull
  public final TextView findPatientLabel;

  @NonNull
  public final RelativeLayout findPatientView;

  @NonNull
  public final CardView findPatientsCardView;

  @NonNull
  public final TextView formsLabel;

  @NonNull
  public final ImageView learnMoreButton;

  @NonNull
  public final CardView learnMoreCardView;

  @NonNull
  public final RelativeLayout learnMoreView;

  @NonNull
  public final CardView placeholder;

  @NonNull
  public final CardView registerPatientCardView;

  @NonNull
  public final TextView registryLabel;

  @NonNull
  public final ImageView registryPatientButton;

  @NonNull
  public final RelativeLayout registryPatientView;

  private FragmentDashboardBinding(@NonNull ScrollView rootView,
      @NonNull ImageView activeVisitsButton, @NonNull CardView activeVisitsCardView,
      @NonNull TextView activeVisitsLabel, @NonNull RelativeLayout activeVisitsView,
      @NonNull ConstraintLayout constraintLayout, @NonNull ImageView findPatientButton,
      @NonNull TextView findPatientLabel, @NonNull RelativeLayout findPatientView,
      @NonNull CardView findPatientsCardView, @NonNull TextView formsLabel,
      @NonNull ImageView learnMoreButton, @NonNull CardView learnMoreCardView,
      @NonNull RelativeLayout learnMoreView, @NonNull CardView placeholder,
      @NonNull CardView registerPatientCardView, @NonNull TextView registryLabel,
      @NonNull ImageView registryPatientButton, @NonNull RelativeLayout registryPatientView) {
    this.rootView = rootView;
    this.activeVisitsButton = activeVisitsButton;
    this.activeVisitsCardView = activeVisitsCardView;
    this.activeVisitsLabel = activeVisitsLabel;
    this.activeVisitsView = activeVisitsView;
    this.constraintLayout = constraintLayout;
    this.findPatientButton = findPatientButton;
    this.findPatientLabel = findPatientLabel;
    this.findPatientView = findPatientView;
    this.findPatientsCardView = findPatientsCardView;
    this.formsLabel = formsLabel;
    this.learnMoreButton = learnMoreButton;
    this.learnMoreCardView = learnMoreCardView;
    this.learnMoreView = learnMoreView;
    this.placeholder = placeholder;
    this.registerPatientCardView = registerPatientCardView;
    this.registryLabel = registryLabel;
    this.registryPatientButton = registryPatientButton;
    this.registryPatientView = registryPatientView;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.activeVisitsButton;
      ImageView activeVisitsButton = rootView.findViewById(id);
      if (activeVisitsButton == null) {
        break missingId;
      }

      id = R.id.activeVisitsCardView;
      CardView activeVisitsCardView = rootView.findViewById(id);
      if (activeVisitsCardView == null) {
        break missingId;
      }

      id = R.id.activeVisitsLabel;
      TextView activeVisitsLabel = rootView.findViewById(id);
      if (activeVisitsLabel == null) {
        break missingId;
      }

      id = R.id.activeVisitsView;
      RelativeLayout activeVisitsView = rootView.findViewById(id);
      if (activeVisitsView == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = rootView.findViewById(id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.findPatientButton;
      ImageView findPatientButton = rootView.findViewById(id);
      if (findPatientButton == null) {
        break missingId;
      }

      id = R.id.findPatientLabel;
      TextView findPatientLabel = rootView.findViewById(id);
      if (findPatientLabel == null) {
        break missingId;
      }

      id = R.id.findPatientView;
      RelativeLayout findPatientView = rootView.findViewById(id);
      if (findPatientView == null) {
        break missingId;
      }

      id = R.id.findPatientsCardView;
      CardView findPatientsCardView = rootView.findViewById(id);
      if (findPatientsCardView == null) {
        break missingId;
      }

      id = R.id.formsLabel;
      TextView formsLabel = rootView.findViewById(id);
      if (formsLabel == null) {
        break missingId;
      }

      id = R.id.learnMoreButton;
      ImageView learnMoreButton = rootView.findViewById(id);
      if (learnMoreButton == null) {
        break missingId;
      }

      id = R.id.learnMoreCardView;
      CardView learnMoreCardView = rootView.findViewById(id);
      if (learnMoreCardView == null) {
        break missingId;
      }

      id = R.id.learnMoreView;
      RelativeLayout learnMoreView = rootView.findViewById(id);
      if (learnMoreView == null) {
        break missingId;
      }

      id = R.id.placeholder;
      CardView placeholder = rootView.findViewById(id);
      if (placeholder == null) {
        break missingId;
      }

      id = R.id.registerPatientCardView;
      CardView registerPatientCardView = rootView.findViewById(id);
      if (registerPatientCardView == null) {
        break missingId;
      }

      id = R.id.registryLabel;
      TextView registryLabel = rootView.findViewById(id);
      if (registryLabel == null) {
        break missingId;
      }

      id = R.id.registryPatientButton;
      ImageView registryPatientButton = rootView.findViewById(id);
      if (registryPatientButton == null) {
        break missingId;
      }

      id = R.id.registryPatientView;
      RelativeLayout registryPatientView = rootView.findViewById(id);
      if (registryPatientView == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((ScrollView) rootView, activeVisitsButton,
          activeVisitsCardView, activeVisitsLabel, activeVisitsView, constraintLayout,
          findPatientButton, findPatientLabel, findPatientView, findPatientsCardView, formsLabel,
          learnMoreButton, learnMoreCardView, learnMoreView, placeholder, registerPatientCardView,
          registryLabel, registryPatientButton, registryPatientView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
