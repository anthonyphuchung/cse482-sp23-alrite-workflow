// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class FragmentAllergyInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView allergenDrug;

  @NonNull
  public final TextView allergenFood;

  @NonNull
  public final TextView allergenOther;

  @NonNull
  public final Spinner allergySpinner;

  @NonNull
  public final TextView cancelButton;

  @NonNull
  public final ChipGroup chipGroup;

  @NonNull
  public final EditText commentBox;

  @NonNull
  public final TextView commentHeader;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final TextView finalAllergen;

  @NonNull
  public final LinearLayout linearLayoutCategory;

  @NonNull
  public final LinearLayout linearLayoutReaction;

  @NonNull
  public final LinearLayout linearLayoutSeverity;

  @NonNull
  public final TextView mildSeverity;

  @NonNull
  public final TextView moderateSeverity;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final Spinner reactionSpinner;

  @NonNull
  public final TextView severeSeverity;

  @NonNull
  public final TextView submitButton;

  @NonNull
  public final View transparentScreen;

  private FragmentAllergyInfoBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView allergenDrug, @NonNull TextView allergenFood,
      @NonNull TextView allergenOther, @NonNull Spinner allergySpinner,
      @NonNull TextView cancelButton, @NonNull ChipGroup chipGroup, @NonNull EditText commentBox,
      @NonNull TextView commentHeader, @NonNull ConstraintLayout constraintLayout,
      @NonNull TextView finalAllergen, @NonNull LinearLayout linearLayoutCategory,
      @NonNull LinearLayout linearLayoutReaction, @NonNull LinearLayout linearLayoutSeverity,
      @NonNull TextView mildSeverity, @NonNull TextView moderateSeverity,
      @NonNull ProgressBar progressBar, @NonNull Spinner reactionSpinner,
      @NonNull TextView severeSeverity, @NonNull TextView submitButton,
      @NonNull View transparentScreen) {
    this.rootView = rootView;
    this.allergenDrug = allergenDrug;
    this.allergenFood = allergenFood;
    this.allergenOther = allergenOther;
    this.allergySpinner = allergySpinner;
    this.cancelButton = cancelButton;
    this.chipGroup = chipGroup;
    this.commentBox = commentBox;
    this.commentHeader = commentHeader;
    this.constraintLayout = constraintLayout;
    this.finalAllergen = finalAllergen;
    this.linearLayoutCategory = linearLayoutCategory;
    this.linearLayoutReaction = linearLayoutReaction;
    this.linearLayoutSeverity = linearLayoutSeverity;
    this.mildSeverity = mildSeverity;
    this.moderateSeverity = moderateSeverity;
    this.progressBar = progressBar;
    this.reactionSpinner = reactionSpinner;
    this.severeSeverity = severeSeverity;
    this.submitButton = submitButton;
    this.transparentScreen = transparentScreen;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentAllergyInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentAllergyInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_allergy_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentAllergyInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.allergen_drug;
      TextView allergenDrug = rootView.findViewById(id);
      if (allergenDrug == null) {
        break missingId;
      }

      id = R.id.allergen_food;
      TextView allergenFood = rootView.findViewById(id);
      if (allergenFood == null) {
        break missingId;
      }

      id = R.id.allergen_other;
      TextView allergenOther = rootView.findViewById(id);
      if (allergenOther == null) {
        break missingId;
      }

      id = R.id.allergy_spinner;
      Spinner allergySpinner = rootView.findViewById(id);
      if (allergySpinner == null) {
        break missingId;
      }

      id = R.id.cancel_button;
      TextView cancelButton = rootView.findViewById(id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.chip_group;
      ChipGroup chipGroup = rootView.findViewById(id);
      if (chipGroup == null) {
        break missingId;
      }

      id = R.id.comment_box;
      EditText commentBox = rootView.findViewById(id);
      if (commentBox == null) {
        break missingId;
      }

      id = R.id.comment_header;
      TextView commentHeader = rootView.findViewById(id);
      if (commentHeader == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = rootView.findViewById(id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.final_allergen;
      TextView finalAllergen = rootView.findViewById(id);
      if (finalAllergen == null) {
        break missingId;
      }

      id = R.id.linear_layout_category;
      LinearLayout linearLayoutCategory = rootView.findViewById(id);
      if (linearLayoutCategory == null) {
        break missingId;
      }

      id = R.id.linear_layout_reaction;
      LinearLayout linearLayoutReaction = rootView.findViewById(id);
      if (linearLayoutReaction == null) {
        break missingId;
      }

      id = R.id.linear_layout_severity;
      LinearLayout linearLayoutSeverity = rootView.findViewById(id);
      if (linearLayoutSeverity == null) {
        break missingId;
      }

      id = R.id.mild_severity;
      TextView mildSeverity = rootView.findViewById(id);
      if (mildSeverity == null) {
        break missingId;
      }

      id = R.id.moderate_severity;
      TextView moderateSeverity = rootView.findViewById(id);
      if (moderateSeverity == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = rootView.findViewById(id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.reaction_spinner;
      Spinner reactionSpinner = rootView.findViewById(id);
      if (reactionSpinner == null) {
        break missingId;
      }

      id = R.id.severe_severity;
      TextView severeSeverity = rootView.findViewById(id);
      if (severeSeverity == null) {
        break missingId;
      }

      id = R.id.submit_button;
      TextView submitButton = rootView.findViewById(id);
      if (submitButton == null) {
        break missingId;
      }

      id = R.id.transparent_screen;
      View transparentScreen = rootView.findViewById(id);
      if (transparentScreen == null) {
        break missingId;
      }

      return new FragmentAllergyInfoBinding((ConstraintLayout) rootView, allergenDrug, allergenFood,
          allergenOther, allergySpinner, cancelButton, chipGroup, commentBox, commentHeader,
          constraintLayout, finalAllergen, linearLayoutCategory, linearLayoutReaction,
          linearLayoutSeverity, mildSeverity, moderateSeverity, progressBar, reactionSpinner,
          severeSeverity, submitButton, transparentScreen);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
