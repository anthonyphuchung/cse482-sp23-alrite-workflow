// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class FragmentPatientDiagnosisBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView emptyDiagnosisListView;

  @NonNull
  public final ListView patientDiagnosisList;

  private FragmentPatientDiagnosisBinding(@NonNull LinearLayout rootView,
      @NonNull TextView emptyDiagnosisListView, @NonNull ListView patientDiagnosisList) {
    this.rootView = rootView;
    this.emptyDiagnosisListView = emptyDiagnosisListView;
    this.patientDiagnosisList = patientDiagnosisList;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPatientDiagnosisBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPatientDiagnosisBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_patient_diagnosis, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPatientDiagnosisBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.emptyDiagnosisListView;
      TextView emptyDiagnosisListView = rootView.findViewById(id);
      if (emptyDiagnosisListView == null) {
        break missingId;
      }

      id = R.id.patientDiagnosisList;
      ListView patientDiagnosisList = rootView.findViewById(id);
      if (patientDiagnosisList == null) {
        break missingId;
      }

      return new FragmentPatientDiagnosisBinding((LinearLayout) rootView, emptyDiagnosisListView,
          patientDiagnosisList);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
