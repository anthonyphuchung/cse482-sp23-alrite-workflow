// Generated by view binder compiler. Do not edit!
package org.openmrs.mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.openmrs.mobile.R;

public final class ActivityDiagnosisBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView accordion;

  @NonNull
  public final ImageView accordion2;

  @NonNull
  public final Button btnExit;

  @NonNull
  public final Button btnExit2;

  @NonNull
  public final LinearLayout clickable;

  @NonNull
  public final LinearLayout clickable2;

  @NonNull
  public final LinearLayout exit;

  @NonNull
  public final TextView initials;

  @NonNull
  public final TextView patientAge;

  @NonNull
  public final TextView patientSex;

  @NonNull
  public final LinearLayout pt;

  @NonNull
  public final RecyclerView recyclerView1;

  @NonNull
  public final RecyclerView recyclerView2;

  @NonNull
  public final ScrollView summary1;

  @NonNull
  public final LinearLayout summary2;

  @NonNull
  public final LinearLayout summary3;

  private ActivityDiagnosisBinding(@NonNull LinearLayout rootView, @NonNull ImageView accordion,
      @NonNull ImageView accordion2, @NonNull Button btnExit, @NonNull Button btnExit2,
      @NonNull LinearLayout clickable, @NonNull LinearLayout clickable2, @NonNull LinearLayout exit,
      @NonNull TextView initials, @NonNull TextView patientAge, @NonNull TextView patientSex,
      @NonNull LinearLayout pt, @NonNull RecyclerView recyclerView1,
      @NonNull RecyclerView recyclerView2, @NonNull ScrollView summary1,
      @NonNull LinearLayout summary2, @NonNull LinearLayout summary3) {
    this.rootView = rootView;
    this.accordion = accordion;
    this.accordion2 = accordion2;
    this.btnExit = btnExit;
    this.btnExit2 = btnExit2;
    this.clickable = clickable;
    this.clickable2 = clickable2;
    this.exit = exit;
    this.initials = initials;
    this.patientAge = patientAge;
    this.patientSex = patientSex;
    this.pt = pt;
    this.recyclerView1 = recyclerView1;
    this.recyclerView2 = recyclerView2;
    this.summary1 = summary1;
    this.summary2 = summary2;
    this.summary3 = summary3;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDiagnosisBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDiagnosisBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_diagnosis, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDiagnosisBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accordion;
      ImageView accordion = rootView.findViewById(id);
      if (accordion == null) {
        break missingId;
      }

      id = R.id.accordion2;
      ImageView accordion2 = rootView.findViewById(id);
      if (accordion2 == null) {
        break missingId;
      }

      id = R.id.btnExit;
      Button btnExit = rootView.findViewById(id);
      if (btnExit == null) {
        break missingId;
      }

      id = R.id.btnExit2;
      Button btnExit2 = rootView.findViewById(id);
      if (btnExit2 == null) {
        break missingId;
      }

      id = R.id.clickable;
      LinearLayout clickable = rootView.findViewById(id);
      if (clickable == null) {
        break missingId;
      }

      id = R.id.clickable2;
      LinearLayout clickable2 = rootView.findViewById(id);
      if (clickable2 == null) {
        break missingId;
      }

      id = R.id.exit;
      LinearLayout exit = rootView.findViewById(id);
      if (exit == null) {
        break missingId;
      }

      id = R.id.initials;
      TextView initials = rootView.findViewById(id);
      if (initials == null) {
        break missingId;
      }

      id = R.id.patient_age;
      TextView patientAge = rootView.findViewById(id);
      if (patientAge == null) {
        break missingId;
      }

      id = R.id.patient_sex;
      TextView patientSex = rootView.findViewById(id);
      if (patientSex == null) {
        break missingId;
      }

      id = R.id.pt;
      LinearLayout pt = rootView.findViewById(id);
      if (pt == null) {
        break missingId;
      }

      id = R.id.recyclerView1;
      RecyclerView recyclerView1 = rootView.findViewById(id);
      if (recyclerView1 == null) {
        break missingId;
      }

      id = R.id.recyclerView2;
      RecyclerView recyclerView2 = rootView.findViewById(id);
      if (recyclerView2 == null) {
        break missingId;
      }

      id = R.id.summary1;
      ScrollView summary1 = rootView.findViewById(id);
      if (summary1 == null) {
        break missingId;
      }

      id = R.id.summary2;
      LinearLayout summary2 = rootView.findViewById(id);
      if (summary2 == null) {
        break missingId;
      }

      id = R.id.summary3;
      LinearLayout summary3 = rootView.findViewById(id);
      if (summary3 == null) {
        break missingId;
      }

      return new ActivityDiagnosisBinding((LinearLayout) rootView, accordion, accordion2, btnExit,
          btnExit2, clickable, clickable2, exit, initials, patientAge, patientSex, pt,
          recyclerView1, recyclerView2, summary1, summary2, summary3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
