// Generated by Dagger (https://dagger.dev).
package org.openmrs.mobile.activities.patientdashboard;

import androidx.lifecycle.SavedStateHandle;
import com.openmrs.android_sdk.library.api.repository.AllergyRepository;
import com.openmrs.android_sdk.library.api.repository.PatientRepository;
import com.openmrs.android_sdk.library.api.repository.VisitRepository;
import com.openmrs.android_sdk.library.dao.PatientDAO;
import com.openmrs.android_sdk.library.dao.VisitDAO;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PatientDashboardMainViewModel_Factory implements Factory<PatientDashboardMainViewModel> {
  private final Provider<PatientDAO> patientDAOProvider;

  private final Provider<VisitDAO> visitDAOProvider;

  private final Provider<PatientRepository> patientRepositoryProvider;

  private final Provider<VisitRepository> visitRepositoryProvider;

  private final Provider<AllergyRepository> allergyRepositoryProvider;

  private final Provider<SavedStateHandle> savedStateHandleProvider;

  public PatientDashboardMainViewModel_Factory(Provider<PatientDAO> patientDAOProvider,
      Provider<VisitDAO> visitDAOProvider, Provider<PatientRepository> patientRepositoryProvider,
      Provider<VisitRepository> visitRepositoryProvider,
      Provider<AllergyRepository> allergyRepositoryProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    this.patientDAOProvider = patientDAOProvider;
    this.visitDAOProvider = visitDAOProvider;
    this.patientRepositoryProvider = patientRepositoryProvider;
    this.visitRepositoryProvider = visitRepositoryProvider;
    this.allergyRepositoryProvider = allergyRepositoryProvider;
    this.savedStateHandleProvider = savedStateHandleProvider;
  }

  @Override
  public PatientDashboardMainViewModel get() {
    return newInstance(patientDAOProvider.get(), visitDAOProvider.get(), patientRepositoryProvider.get(), visitRepositoryProvider.get(), allergyRepositoryProvider.get(), savedStateHandleProvider.get());
  }

  public static PatientDashboardMainViewModel_Factory create(
      Provider<PatientDAO> patientDAOProvider, Provider<VisitDAO> visitDAOProvider,
      Provider<PatientRepository> patientRepositoryProvider,
      Provider<VisitRepository> visitRepositoryProvider,
      Provider<AllergyRepository> allergyRepositoryProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    return new PatientDashboardMainViewModel_Factory(patientDAOProvider, visitDAOProvider, patientRepositoryProvider, visitRepositoryProvider, allergyRepositoryProvider, savedStateHandleProvider);
  }

  public static PatientDashboardMainViewModel newInstance(PatientDAO patientDAO, VisitDAO visitDAO,
      PatientRepository patientRepository, VisitRepository visitRepository,
      AllergyRepository allergyRepository, SavedStateHandle savedStateHandle) {
    return new PatientDashboardMainViewModel(patientDAO, visitDAO, patientRepository, visitRepository, allergyRepository, savedStateHandle);
  }
}
