// Generated by Dagger (https://dagger.dev).
package org.openmrs.mobile.activities.patientdashboard.visits;

import androidx.lifecycle.SavedStateHandle;
import com.openmrs.android_sdk.library.api.repository.VisitRepository;
import com.openmrs.android_sdk.library.dao.PatientDAO;
import com.openmrs.android_sdk.library.dao.VisitDAO;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PatientDashboardVisitsViewModel_Factory implements Factory<PatientDashboardVisitsViewModel> {
  private final Provider<PatientDAO> patientDAOProvider;

  private final Provider<VisitDAO> visitDAOProvider;

  private final Provider<VisitRepository> visitRepositoryProvider;

  private final Provider<SavedStateHandle> savedStateHandleProvider;

  public PatientDashboardVisitsViewModel_Factory(Provider<PatientDAO> patientDAOProvider,
      Provider<VisitDAO> visitDAOProvider, Provider<VisitRepository> visitRepositoryProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    this.patientDAOProvider = patientDAOProvider;
    this.visitDAOProvider = visitDAOProvider;
    this.visitRepositoryProvider = visitRepositoryProvider;
    this.savedStateHandleProvider = savedStateHandleProvider;
  }

  @Override
  public PatientDashboardVisitsViewModel get() {
    return newInstance(patientDAOProvider.get(), visitDAOProvider.get(), visitRepositoryProvider.get(), savedStateHandleProvider.get());
  }

  public static PatientDashboardVisitsViewModel_Factory create(
      Provider<PatientDAO> patientDAOProvider, Provider<VisitDAO> visitDAOProvider,
      Provider<VisitRepository> visitRepositoryProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    return new PatientDashboardVisitsViewModel_Factory(patientDAOProvider, visitDAOProvider, visitRepositoryProvider, savedStateHandleProvider);
  }

  public static PatientDashboardVisitsViewModel newInstance(PatientDAO patientDAO,
      VisitDAO visitDAO, VisitRepository visitRepository, SavedStateHandle savedStateHandle) {
    return new PatientDashboardVisitsViewModel(patientDAO, visitDAO, visitRepository, savedStateHandle);
  }
}
