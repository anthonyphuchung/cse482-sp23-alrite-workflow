// Generated by Dagger (https://dagger.dev).
package org.openmrs.mobile.application;

import androidx.hilt.work.HiltWorkerFactory;
import com.openmrs.android_sdk.library.OpenMRSLogger;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OpenMRS_MembersInjector implements MembersInjector<OpenMRS> {
  private final Provider<OpenMRSLogger> mLoggerProvider;

  private final Provider<HiltWorkerFactory> workerFactoryProvider;

  public OpenMRS_MembersInjector(Provider<OpenMRSLogger> mLoggerProvider,
      Provider<HiltWorkerFactory> workerFactoryProvider) {
    this.mLoggerProvider = mLoggerProvider;
    this.workerFactoryProvider = workerFactoryProvider;
  }

  public static MembersInjector<OpenMRS> create(Provider<OpenMRSLogger> mLoggerProvider,
      Provider<HiltWorkerFactory> workerFactoryProvider) {
    return new OpenMRS_MembersInjector(mLoggerProvider, workerFactoryProvider);
  }

  @Override
  public void injectMembers(OpenMRS instance) {
    injectMLogger(instance, mLoggerProvider.get());
    injectWorkerFactory(instance, workerFactoryProvider.get());
  }

  @InjectedFieldSignature("org.openmrs.mobile.application.OpenMRS.mLogger")
  public static void injectMLogger(OpenMRS instance, OpenMRSLogger mLogger) {
    instance.mLogger = mLogger;
  }

  @InjectedFieldSignature("org.openmrs.mobile.application.OpenMRS.workerFactory")
  public static void injectWorkerFactory(OpenMRS instance, HiltWorkerFactory workerFactory) {
    instance.workerFactory = workerFactory;
  }
}
