// Generated by Dagger (https://dagger.dev).
package org.openmrs.mobile.activities.addeditpatient;

import androidx.lifecycle.SavedStateHandle;
import com.openmrs.android_sdk.library.api.repository.ConceptRepository;
import com.openmrs.android_sdk.library.api.repository.PatientRepository;
import com.openmrs.android_sdk.library.dao.PatientDAO;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AddEditPatientViewModel_Factory implements Factory<AddEditPatientViewModel> {
  private final Provider<PatientDAO> patientDAOProvider;

  private final Provider<PatientRepository> patientRepositoryProvider;

  private final Provider<ConceptRepository> conceptRepositoryProvider;

  private final Provider<SavedStateHandle> savedStateHandleProvider;

  public AddEditPatientViewModel_Factory(Provider<PatientDAO> patientDAOProvider,
      Provider<PatientRepository> patientRepositoryProvider,
      Provider<ConceptRepository> conceptRepositoryProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    this.patientDAOProvider = patientDAOProvider;
    this.patientRepositoryProvider = patientRepositoryProvider;
    this.conceptRepositoryProvider = conceptRepositoryProvider;
    this.savedStateHandleProvider = savedStateHandleProvider;
  }

  @Override
  public AddEditPatientViewModel get() {
    return newInstance(patientDAOProvider.get(), patientRepositoryProvider.get(), conceptRepositoryProvider.get(), savedStateHandleProvider.get());
  }

  public static AddEditPatientViewModel_Factory create(Provider<PatientDAO> patientDAOProvider,
      Provider<PatientRepository> patientRepositoryProvider,
      Provider<ConceptRepository> conceptRepositoryProvider,
      Provider<SavedStateHandle> savedStateHandleProvider) {
    return new AddEditPatientViewModel_Factory(patientDAOProvider, patientRepositoryProvider, conceptRepositoryProvider, savedStateHandleProvider);
  }

  public static AddEditPatientViewModel newInstance(PatientDAO patientDAO,
      PatientRepository patientRepository, ConceptRepository conceptRepository,
      SavedStateHandle savedStateHandle) {
    return new AddEditPatientViewModel(patientDAO, patientRepository, conceptRepository, savedStateHandle);
  }
}
